%row {
  display: flex;
}

$grid-breakpoints: (
  // Extra small screen / phone
  xs: 0px,
  // Small screen / phone
  sm: 576px,
  // Medium screen / tablet
  md: 768px,
  // Large screen / desktop
  lg: 992px,
  // Extra large screen / wide desktop
  xl: 1200px,
  // Huge desktop
  xxl: 1600px,
);

@mixin grid($columns) {
  @each $size, $breakpoint in $grid-breakpoints {
    $index: index(map-keys($grid-breakpoints), $size);
    $length: length($grid-breakpoints);
    $next-breakpoint: $breakpoint;
    @if $length >= $index + 1 {
      $next-breakpoint: nth(nth($grid-breakpoints, ($index + 1)), 2);
    }
    @media (min-width: $breakpoint) {
      %col-#{$size} {
        flex-basis: 0;
        flex-grow: 1;
        max-width: 100%;
      }
    }
    %col-#{$size}-hidden-down {
      @media (max-width: $next-breakpoint) {
        display: none!important;
      }
    }
    %col-#{$size}-hidden {
      @media (min-width: $breakpoint) and (max-width: $next-breakpoint) {
        display: none!important;
      }
    }
    @for $i from 1 through $columns {
      %col-#{$size}-#{$i} {
        @media (min-width: $breakpoint) {
          flex-basis: percentage($i / $columns);
          // max-width: percentage($i / $columns);
        }
      }
    }
  }
}

@include grid(12);

